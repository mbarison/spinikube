---
apiVersion: "v1"
kind: "ReplicationController"
metadata:
  labels:
    load-balancer-spinnaker: "true"
    replication-controller: "spinnaker-v000"
  name: "spinnaker-v000"
  namespace: "spinnaker"
spec:
  replicas: 1
  selector:
    replication-controller: "spinnaker-v000"
  template:
    metadata:
      labels:
        load-balancer-spinnaker: "true"
        replication-controller: "spinnaker-v000"
        app: "spinnaker"
    spec:
      containers:
      # - args: []
      #   command: []
      #   env: []
      #   image: "gcr.io/spinnaker-marketplace/halyard:stable"
      #   imagePullPolicy: "Always"
      #   name: "halyard"
      #   ports: []
      #   resources: {}
      #   terminationMessagePath: "/dev/termination-log"
      #   volumeMounts:
      #   - mountPath: "/workdir/.spinnaker"
      #     name: "spinnaker-config"
      #   - mountPath: "/root/.kube"
      #     name: "minikube-config"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/clouddriver:latest"
        imagePullPolicy: "Always"
        name: "clouddriver"
        ports:
        - containerPort: 7002
          name: "http"
          protocol: "TCP"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/opt/clouddriver/config"
          name: "spinnaker-config"
        - mountPath: "/root/.kube"
          name: "minikube-config"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/deck:latest"
        imagePullPolicy: "Always"
        name: "deck"
        ports:
        - containerPort: 9000
          name: "http"
          protocol: "TCP"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/echo:latest"
        imagePullPolicy: "Always"
        name: "echo"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/opt/echo/config"
          name: "spinnaker-config"
      # - args: []
      #   command: []
      #   env: []
      #   image: "quay.io/spinnaker/fiat:latest"
      #   imagePullPolicy: "Always"
      #   name: "fiat"
      #   ports:
      #   - containerPort: 7003
      #     name: "http"
      #     protocol: "TCP"
      #   resources: {}
      #   terminationMessagePath: "/dev/termination-log"
      #   volumeMounts:
      #   - mountPath: "/opt/fiat/config"
      #     name: "spinnaker-config"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/front50:latest"
        imagePullPolicy: "Always"
        name: "front50"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/opt/front50/config"
          name: "spinnaker-config"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/gate:latest"
        imagePullPolicy: "Always"
        name: "gate"
        ports:
        - containerPort: 8084
          name: "http"
          protocol: "TCP"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/opt/gate/config"
          name: "spinnaker-config"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/igor:latest"
        imagePullPolicy: "Always"
        name: "igor"
        ports:
        - containerPort: 8088
          name: "http"
          protocol: "TCP"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/opt/igor/config"
          name: "spinnaker-config"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/orca:latest"
        imagePullPolicy: "Always"
        name: "orca"
        ports:
        - containerPort: 8083
          name: "http"
          protocol: "TCP"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/opt/orca/config"
          name: "spinnaker-config"
      - args: []
        command: []
        env: []
        image: "quay.io/spinnaker/rosco:latest"
        imagePullPolicy: "Always"
        name: "rosco"
        ports:
        - containerPort: 8087
          name: "http"
          protocol: "TCP"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/opt/rosco/config"
          name: "spinnaker-config"
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "dockerhub"
      - name: "spinnaker-registry"
      - name: "dockerhub"
      - name: "spinnaker-registry"
      restartPolicy: "Always"
      securityContext:
        supplementalGroups: []
      terminationGracePeriodSeconds: 30
      volumes:
      - name: "spinnaker-config"
        secret:
          secretName: "spinnaker-config"
      - name: "minikube-config"
        secret:
          secretName: "minikube-config"
